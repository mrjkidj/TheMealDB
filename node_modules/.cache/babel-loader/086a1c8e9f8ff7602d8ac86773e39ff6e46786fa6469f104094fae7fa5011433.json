{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../../Http/settings\";\nconst initialState = {\n  latest: [],\n  infoMeal: [],\n  popular: [],\n  popularInfo: [],\n  text: \"\",\n  randomMeal: [],\n  randomIngredient: [],\n  country: [],\n  countryInfo: [],\n  alfavitMeal: [],\n  search: []\n};\nexport const getLatestMeal = createAsyncThunk(\"latest/getLatestMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const mealNumbers = [53075, 53074, 53073, 53072, 53071, 53070, 53069, 53068];\n    const results = await Promise.all(mealNumbers.map(async number => {\n      const result = await instance.get(`lookup.php?i=${number}`);\n      // return result.data.meals;\n      console.log(result);\n    }));\n    const combinedMeals = results.flat();\n    dispatch(latestMeal(combinedMeals));\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});\n//* infoMeal\nexport const getInfoMeal = createAsyncThunk(\"infoMeal/getInfoMeal\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(`lookup.php?i=${elem}`);\n  dispatch(ingoIngredientMeal(result.data.meals));\n});\n//* popular\nexport const getPopular = createAsyncThunk(\"popular/getPopular\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(\"list.php?i=list\");\n  dispatch(popularMeal(result.data.meals));\n  dispatch(getRandomIngredients(result.data.meals));\n});\n//* popularInfo\nexport const getPopularInfo = createAsyncThunk(\"popularInfo/getPopularInfo\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(`filter.php?i=${elem}`);\n  dispatch(popularInfoMeal(response.data.meals));\n});\n//* randomMeal\nexport const getRandomMeal = createAsyncThunk(\"randomMeal/getRandomMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const random = [1, 2, 3, 4, 5, 6, 7, 8];\n    const responses = await Promise.all(random.map(() => instance.get(\"random.php\")));\n    const randomMealsData = responses.map(response => response.data.meals[0]);\n    dispatch(getRandom(randomMealsData));\n  } catch (error) {\n    console.error(\"Error fetching random Meals:\", error);\n  }\n});\n//* country\nexport const getCountryMeals = createAsyncThunk(\"country/getCountryMeals\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(\"list.php?a=list\");\n  dispatch(getCountry(response.data.meals));\n});\n//* countryInfo\nexport const getCountryInfoMeal = createAsyncThunk(\"countryInfo/getCountryInfoMeal\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(`filter.php?a=${elem}`);\n  dispatch(getCountryInfo(response.data.meals));\n});\n//* alfavitMeal\nexport const getAlfavitMeals = createAsyncThunk(\"alfavitMeal/getAlfavitMeals\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const res = await instance.get(`search.php?f=${elem}`);\n  dispatch(getAlfavitMeal(res.data.meals));\n});\n//* search\nexport const getSearchMeals = createAsyncThunk(\"search/getSearchMeals\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const res = await instance.get(`search.php?s=${elem}`);\n  dispatch(getSearchMeal(res.data.meals));\n});\nconst mealSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    latestMeal: (state, action) => {\n      state.latest = action.payload;\n    },\n    ingoIngredientMeal: (state, action) => {\n      state.infoMeal = action.payload;\n    },\n    popularMeal: (state, action) => {\n      state.popular = action.payload;\n    },\n    popularInfoMeal: (state, action) => {\n      state.popularInfo = action.payload;\n    },\n    onDescription: (state, action) => {\n      state.text = action.payload;\n    },\n    getRandom: (state, action) => {\n      state.randomMeal = action.payload;\n    },\n    getRandomIngredients: (state, action) => {\n      state.randomIngredient = action.payload;\n    },\n    getCountry: (state, action) => {\n      state.country = action.payload;\n    },\n    getCountryInfo: (state, action) => {\n      state.countryInfo = action.payload;\n    },\n    getAlfavitMeal: (state, action) => {\n      state.alfavitMeal = action.payload;\n    },\n    getSearchMeal: (state, action) => {\n      state.search = action.payload;\n    }\n  }\n});\nexport const {\n  latestMeal,\n  ingoIngredientMeal,\n  popularMeal,\n  popularInfoMeal,\n  onDescription,\n  getRandom,\n  getRandomIngredients,\n  getCountry,\n  getCountryInfo,\n  getAlfavitMeal,\n  getSearchMeal\n} = mealSlice.actions;\nexport default mealSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","initialState","latest","infoMeal","popular","popularInfo","text","randomMeal","randomIngredient","country","countryInfo","alfavitMeal","search","getLatestMeal","_","rejectWithValue","dispatch","mealNumbers","results","Promise","all","map","number","result","get","console","log","combinedMeals","flat","latestMeal","error","message","getInfoMeal","elem","ingoIngredientMeal","data","meals","getPopular","popularMeal","getRandomIngredients","getPopularInfo","response","popularInfoMeal","getRandomMeal","random","responses","randomMealsData","getRandom","getCountryMeals","getCountry","getCountryInfoMeal","getCountryInfo","getAlfavitMeals","res","getAlfavitMeal","getSearchMeals","getSearchMeal","mealSlice","name","reducers","state","action","payload","onDescription","actions","reducer"],"sources":["/Users/saabolotkajratbekuulu/Desktop/React/themeal/src/Redux-toolkit/MealSlice/MealSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../../Http/settings\";\n\nconst initialState = {\n  latest: [],\n  infoMeal: [], \n  popular: [],\n  popularInfo: [],\n  text: \"\",\n  randomMeal: [],\n  randomIngredient: [],\n  country: [],\n  countryInfo: [],\n  alfavitMeal: [],\n  search: [],\n};\nexport const getLatestMeal = createAsyncThunk(\n  \"latest/getLatestMeal\",\n  async (_, { rejectWithValue, dispatch }) => {\n    try {\n      const mealNumbers = [\n        53075, 53074, 53073, 53072, 53071, 53070, 53069, 53068,\n      ];\n      const results = await Promise.all(\n        mealNumbers.map(async (number) => {\n          const result = await instance.get(`lookup.php?i=${number}`);\n          // return result.data.meals;\n          console.log(result)\n        })\n      );\n      \n      const combinedMeals = results.flat();\n      dispatch(latestMeal(combinedMeals));\n    } catch (error) {\n      rejectWithValue(error.message);\n    }\n  }\n);\n//* infoMeal\nexport const getInfoMeal = createAsyncThunk(\n  \"infoMeal/getInfoMeal\",\n  async (elem, { rejectWithValue, dispatch }) => {\n    const result = await instance.get(`lookup.php?i=${elem}`);\n    dispatch(ingoIngredientMeal(result.data.meals));\n  }\n);\n//* popular\nexport const getPopular = createAsyncThunk(\n  \"popular/getPopular\",\n  async (_, { rejectWithValue, dispatch }) => {\n    const result = await instance.get(\"list.php?i=list\");\n    dispatch(popularMeal(result.data.meals));\n    dispatch(getRandomIngredients(result.data.meals));\n  }\n);\n//* popularInfo\nexport const getPopularInfo = createAsyncThunk(\n  \"popularInfo/getPopularInfo\",\n  async (elem, { rejectWithValue, dispatch }) => {\n    const response = await instance.get(`filter.php?i=${elem}`);\n    dispatch(popularInfoMeal(response.data.meals));\n  }\n);\n//* randomMeal\nexport const getRandomMeal = createAsyncThunk(\n  \"randomMeal/getRandomMeal\",\n  async (_, { rejectWithValue, dispatch }) => {\n    try {\n      const random = [1, 2, 3, 4, 5, 6, 7, 8];\n      const responses = await Promise.all(\n        random.map(() => instance.get(\"random.php\"))\n      );\n      const randomMealsData = responses.map(\n        (response) => response.data.meals[0]\n      );\n      dispatch(getRandom(randomMealsData));\n    } catch (error) {\n      console.error(\"Error fetching random Meals:\", error);\n    }\n  }\n);\n//* country\nexport const getCountryMeals = createAsyncThunk(\n  \"country/getCountryMeals\",\n  async (_, { rejectWithValue, dispatch }) => {\n    const response = await instance.get(\"list.php?a=list\");\n    dispatch(getCountry(response.data.meals));\n  }\n);\n//* countryInfo\nexport const getCountryInfoMeal = createAsyncThunk(\n  \"countryInfo/getCountryInfoMeal\",\n  async (elem, { rejectWithValue, dispatch }) => {\n    const response = await instance.get(`filter.php?a=${elem}`);\n    dispatch(getCountryInfo(response.data.meals));\n  }\n);\n//* alfavitMeal\nexport const getAlfavitMeals = createAsyncThunk(\n  \"alfavitMeal/getAlfavitMeals\",\n  async (elem, { rejectWithValue, dispatch }) => {\n    const res = await instance.get(`search.php?f=${elem}`);\n    dispatch(getAlfavitMeal(res.data.meals));\n  }\n);\n//* search\nexport const getSearchMeals = createAsyncThunk(\n  \"search/getSearchMeals\",\n  async (elem, { rejectWithValue,dispatch }) => {\n    const res=await instance.get(`search.php?s=${elem}`)\n    dispatch(getSearchMeal(res.data.meals))\n  }\n);\n\nconst mealSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    latestMeal: (state, action) => {\n      state.latest = action.payload;\n    },\n    ingoIngredientMeal: (state, action) => {\n      state.infoMeal = action.payload;\n    },\n    popularMeal: (state, action) => {\n      state.popular = action.payload;\n    },\n    popularInfoMeal: (state, action) => {\n      state.popularInfo = action.payload;\n    },\n    onDescription: (state, action) => {\n      state.text = action.payload;\n    },\n    getRandom: (state, action) => {\n      state.randomMeal = action.payload;\n    },\n    getRandomIngredients: (state, action) => {\n      state.randomIngredient = action.payload;\n    },\n    getCountry: (state, action) => {\n      state.country = action.payload;\n    },\n    getCountryInfo: (state, action) => {\n      state.countryInfo = action.payload;\n    },\n    getAlfavitMeal: (state, action) => {\n      state.alfavitMeal = action.payload;\n    },\n    getSearchMeal:(state,action)=>{\n      state.search=action.payload\n    }\n  },\n});\n\nexport const {\n  latestMeal,\n  ingoIngredientMeal,\n  popularMeal,\n  popularInfoMeal,\n  onDescription,\n  getRandom,\n  getRandomIngredients,\n  getCountry,\n  getCountryInfo,\n  getAlfavitMeal,\n  getSearchMeal\n} = mealSlice.actions;\n\nexport default mealSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}