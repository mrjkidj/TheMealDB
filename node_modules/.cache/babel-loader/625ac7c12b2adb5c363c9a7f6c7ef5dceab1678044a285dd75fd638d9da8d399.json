{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport instance from \"../../Http/settings\";\nconst initialState = {\n  latest: [],\n  infoMeal: [],\n  popular: [],\n  popularInfo: [],\n  text: \"\",\n  randomMeal: [],\n  randomIngredient: [],\n  country: [],\n  countryInfo: [],\n  alfavitMeal: [],\n  search: []\n};\nexport const getLatestMeal = createAsyncThunk(\"latest/getLatestMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const mealNumbers = [53075, 53074, 53073, 53072, 53071, 53070, 53069, 53068];\n    const results = await Promise.all(mealNumbers.map(async number => {\n      const result = await instance.get(`lookup.php?i=${number}`);\n      return result.data.meals;\n    }));\n    const combinedMeals = results.flat();\n    dispatch(latestMeal(combinedMeals));\n  } catch (error) {\n    rejectWithValue(error.message);\n  }\n});\n//* infoMeal\nexport const getInfoMeal = createAsyncThunk(\"infoMeal/getInfoMeal\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(`lookup.php?i=${elem}`);\n  dispatch(ingoIngredientMeal(result.data.meals));\n});\n//* popular\nexport const getPopular = createAsyncThunk(\"popular/getPopular\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const result = await instance.get(\"list.php?i=list\");\n  dispatch(popularMeal(result.data.meals));\n  dispatch(getRandomIngredients(result.data.meals));\n});\n//* popularInfo\nexport const getPopularInfo = createAsyncThunk(\"popularInfo/getPopularInfo\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(`filter.php?i=${elem}`);\n  dispatch(popularInfoMeal(response.data.meals));\n});\n//* randomMeal\nexport const getRandomMeal = createAsyncThunk(\"randomMeal/getRandomMeal\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const random = [1, 2, 3, 4, 5, 6, 7, 8];\n    const responses = await Promise.all(random.map(() => instance.get(\"random.php\")));\n    const randomMealsData = responses.map(response => response.data.meals[0]);\n    dispatch(getRandom(randomMealsData));\n  } catch (error) {\n    rejectWithValue(\"Error fetching random Meals:\", error);\n  }\n});\n//* country\nexport const getCountryMeals = createAsyncThunk(\"country/getCountryMeals\", async (_, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(\"list.php?a=list\");\n  dispatch(getCountry(response.data.meals));\n});\n//* countryInfo\nexport const getCountryInfoMeal = createAsyncThunk(\"countryInfo/getCountryInfoMeal\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const response = await instance.get(`filter.php?a=${elem}`);\n  dispatch(getCountryInfo(response.data.meals));\n});\n//* alfavitMeal\nexport const getAlfavitMeals = createAsyncThunk(\"alfavitMeal/getAlfavitMeals\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const res = await instance.get(`search.php?f=${elem}`);\n  dispatch(getAlfavitMeal(res.data.meals));\n});\n//* search\nexport const getSearchMeals = createAsyncThunk(\"search/getSearchMeals\", async (elem, {\n  rejectWithValue,\n  dispatch\n}) => {\n  const res = await instance.get(`search.php?s=${elem}`);\n  dispatch(getSearchMeal(res.data.meals));\n});\nconst mealSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {\n    latestMeal: (state, action) => {\n      state.latest = action.payload;\n    },\n    ingoIngredientMeal: (state, action) => {\n      state.infoMeal = action.payload;\n    },\n    popularMeal: (state, action) => {\n      state.popular = action.payload;\n    },\n    popularInfoMeal: (state, action) => {\n      state.popularInfo = action.payload;\n    },\n    onDescription: (state, action) => {\n      state.text = action.payload;\n    },\n    getRandom: (state, action) => {\n      state.randomMeal = action.payload;\n    },\n    getRandomIngredients: (state, action) => {\n      state.randomIngredient = action.payload;\n    },\n    getCountry: (state, action) => {\n      state.country = action.payload;\n    },\n    getCountryInfo: (state, action) => {\n      state.countryInfo = action.payload;\n    },\n    getAlfavitMeal: (state, action) => {\n      state.alfavitMeal = action.payload;\n    },\n    getSearchMeal: (state, action) => {\n      state.search = action.payload;\n    }\n  }\n});\nexport const {\n  latestMeal,\n  ingoIngredientMeal,\n  popularMeal,\n  popularInfoMeal,\n  onDescription,\n  getRandom,\n  getRandomIngredients,\n  getCountry,\n  getCountryInfo,\n  getAlfavitMeal,\n  getSearchMeal\n} = mealSlice.actions;\nexport default mealSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","instance","initialState","latest","infoMeal","popular","popularInfo","text","randomMeal","randomIngredient","country","countryInfo","alfavitMeal","search","getLatestMeal","_","rejectWithValue","dispatch","mealNumbers","results","Promise","all","map","number","result","get","data","meals","combinedMeals","flat","latestMeal","error","message","getInfoMeal","elem","ingoIngredientMeal","getPopular","popularMeal","getRandomIngredients","getPopularInfo","response","popularInfoMeal","getRandomMeal","random","responses","randomMealsData","getRandom","getCountryMeals","getCountry","getCountryInfoMeal","getCountryInfo","getAlfavitMeals","res","getAlfavitMeal","getSearchMeals","getSearchMeal","mealSlice","name","reducers","state","action","payload","onDescription","actions","reducer"],"sources":["D:/BackUP Не Удалять/Рабочий стол/TheMealDBEND/TheMealsDB/src/Redux-toolkit/MealSlice/MealSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport instance from \"../../Http/settings\";\r\n\r\nconst initialState = {\r\n  latest: [],\r\n  infoMeal: [],\r\n  popular: [],\r\n  popularInfo: [],\r\n  text: \"\",\r\n  randomMeal: [],\r\n  randomIngredient: [],\r\n  country: [],\r\n  countryInfo: [],\r\n  alfavitMeal: [],\r\n  search: [],\r\n};\r\nexport const getLatestMeal = createAsyncThunk(\r\n  \"latest/getLatestMeal\",\r\n  async (_, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const mealNumbers = [\r\n        53075, 53074, 53073, 53072, 53071, 53070, 53069, 53068,\r\n      ];\r\n      const results = await Promise.all(\r\n        mealNumbers.map(async (number) => {\r\n          const result = await instance.get(`lookup.php?i=${number}`);\r\n          return result.data.meals;\r\n        })\r\n      );\r\n      const combinedMeals = results.flat();\r\n      dispatch(latestMeal(combinedMeals));\r\n    } catch (error) {\r\n      rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n//* infoMeal\r\nexport const getInfoMeal = createAsyncThunk(\r\n  \"infoMeal/getInfoMeal\",\r\n  async (elem, { rejectWithValue, dispatch }) => {\r\n    const result = await instance.get(`lookup.php?i=${elem}`);\r\n    dispatch(ingoIngredientMeal(result.data.meals));\r\n  }\r\n);\r\n//* popular\r\nexport const getPopular = createAsyncThunk(\r\n  \"popular/getPopular\",\r\n  async (_, { rejectWithValue, dispatch }) => {\r\n    const result = await instance.get(\"list.php?i=list\");\r\n    dispatch(popularMeal(result.data.meals));\r\n    dispatch(getRandomIngredients(result.data.meals));\r\n  }\r\n);\r\n//* popularInfo\r\nexport const getPopularInfo = createAsyncThunk(\r\n  \"popularInfo/getPopularInfo\",\r\n  async (elem, { rejectWithValue, dispatch }) => {\r\n    const response = await instance.get(`filter.php?i=${elem}`);\r\n    dispatch(popularInfoMeal(response.data.meals));\r\n  }\r\n);\r\n//* randomMeal\r\nexport const getRandomMeal = createAsyncThunk(\r\n  \"randomMeal/getRandomMeal\",\r\n  async (_, { rejectWithValue, dispatch }) => {\r\n    try {\r\n      const random = [1, 2, 3, 4, 5, 6, 7, 8];\r\n      const responses = await Promise.all(\r\n        random.map(() => instance.get(\"random.php\"))\r\n      );\r\n      const randomMealsData = responses.map(\r\n        (response) => response.data.meals[0]\r\n      );\r\n      dispatch(getRandom(randomMealsData));\r\n    } catch (error) {\r\n      rejectWithValue(\"Error fetching random Meals:\", error);\r\n    }\r\n  }\r\n);\r\n//* country\r\nexport const getCountryMeals = createAsyncThunk(\r\n  \"country/getCountryMeals\",\r\n  async (_, { rejectWithValue, dispatch }) => {\r\n    const response = await instance.get(\"list.php?a=list\");\r\n    dispatch(getCountry(response.data.meals));\r\n  }\r\n);\r\n//* countryInfo\r\nexport const getCountryInfoMeal = createAsyncThunk(\r\n  \"countryInfo/getCountryInfoMeal\",\r\n  async (elem, { rejectWithValue, dispatch }) => {\r\n    const response = await instance.get(`filter.php?a=${elem}`);\r\n    dispatch(getCountryInfo(response.data.meals));\r\n  }\r\n);\r\n//* alfavitMeal\r\nexport const getAlfavitMeals = createAsyncThunk(\r\n  \"alfavitMeal/getAlfavitMeals\",\r\n  async (elem, { rejectWithValue, dispatch }) => {\r\n    const res = await instance.get(`search.php?f=${elem}`);\r\n    dispatch(getAlfavitMeal(res.data.meals));\r\n  }\r\n);\r\n//* search\r\nexport const getSearchMeals = createAsyncThunk(\r\n  \"search/getSearchMeals\",\r\n  async (elem, { rejectWithValue, dispatch }) => {\r\n    const res = await instance.get(`search.php?s=${elem}`)\r\n    dispatch(getSearchMeal(res.data.meals))\r\n  }\r\n);\r\n\r\nconst mealSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    latestMeal: (state, action) => {\r\n      state.latest = action.payload;\r\n    },\r\n    ingoIngredientMeal: (state, action) => {\r\n      state.infoMeal = action.payload;\r\n    },\r\n    popularMeal: (state, action) => {\r\n      state.popular = action.payload;\r\n    },\r\n    popularInfoMeal: (state, action) => {\r\n      state.popularInfo = action.payload;\r\n    },\r\n    onDescription: (state, action) => {\r\n      state.text = action.payload;\r\n    },\r\n    getRandom: (state, action) => {\r\n      state.randomMeal = action.payload;\r\n    },\r\n    getRandomIngredients: (state, action) => {\r\n      state.randomIngredient = action.payload;\r\n    },\r\n    getCountry: (state, action) => {\r\n      state.country = action.payload;\r\n    },\r\n    getCountryInfo: (state, action) => {\r\n      state.countryInfo = action.payload;\r\n    },\r\n    getAlfavitMeal: (state, action) => {\r\n      state.alfavitMeal = action.payload;\r\n    },\r\n    getSearchMeal: (state, action) => {\r\n      state.search = action.payload\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  latestMeal,\r\n  ingoIngredientMeal,\r\n  popularMeal,\r\n  popularInfoMeal,\r\n  onDescription,\r\n  getRandom,\r\n  getRandomIngredients,\r\n  getCountry,\r\n  getCountryInfo,\r\n  getAlfavitMeal,\r\n  getSearchMeal\r\n} = mealSlice.actions;\r\n\r\nexport default mealSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,QAAQ,MAAM,qBAAqB;AAE1C,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE,EAAE;EACpBC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE;AACV,CAAC;AACD,OAAO,MAAMC,aAAa,GAAGd,gBAAgB,CAC3C,sBAAsB,EACtB,OAAOe,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,WAAW,GAAG,CAClB,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CACvD;IACD,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC/BH,WAAW,CAACI,GAAG,CAAC,MAAOC,MAAM,IAAK;MAChC,MAAMC,MAAM,GAAG,MAAMvB,QAAQ,CAACwB,GAAG,CAAE,gBAAeF,MAAO,EAAC,CAAC;MAC3D,OAAOC,MAAM,CAACE,IAAI,CAACC,KAAK;IAC1B,CAAC,CACH,CAAC;IACD,MAAMC,aAAa,GAAGT,OAAO,CAACU,IAAI,CAAC,CAAC;IACpCZ,QAAQ,CAACa,UAAU,CAACF,aAAa,CAAC,CAAC;EACrC,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdf,eAAe,CAACe,KAAK,CAACC,OAAO,CAAC;EAChC;AACF,CACF,CAAC;AACD;AACA,OAAO,MAAMC,WAAW,GAAGjC,gBAAgB,CACzC,sBAAsB,EACtB,OAAOkC,IAAI,EAAE;EAAElB,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMO,MAAM,GAAG,MAAMvB,QAAQ,CAACwB,GAAG,CAAE,gBAAeS,IAAK,EAAC,CAAC;EACzDjB,QAAQ,CAACkB,kBAAkB,CAACX,MAAM,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC;AACjD,CACF,CAAC;AACD;AACA,OAAO,MAAMS,UAAU,GAAGpC,gBAAgB,CACxC,oBAAoB,EACpB,OAAOe,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC1C,MAAMO,MAAM,GAAG,MAAMvB,QAAQ,CAACwB,GAAG,CAAC,iBAAiB,CAAC;EACpDR,QAAQ,CAACoB,WAAW,CAACb,MAAM,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC;EACxCV,QAAQ,CAACqB,oBAAoB,CAACd,MAAM,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC;AACnD,CACF,CAAC;AACD;AACA,OAAO,MAAMY,cAAc,GAAGvC,gBAAgB,CAC5C,4BAA4B,EAC5B,OAAOkC,IAAI,EAAE;EAAElB,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMuB,QAAQ,GAAG,MAAMvC,QAAQ,CAACwB,GAAG,CAAE,gBAAeS,IAAK,EAAC,CAAC;EAC3DjB,QAAQ,CAACwB,eAAe,CAACD,QAAQ,CAACd,IAAI,CAACC,KAAK,CAAC,CAAC;AAChD,CACF,CAAC;AACD;AACA,OAAO,MAAMe,aAAa,GAAG1C,gBAAgB,CAC3C,0BAA0B,EAC1B,OAAOe,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC1C,IAAI;IACF,MAAM0B,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvC,MAAMC,SAAS,GAAG,MAAMxB,OAAO,CAACC,GAAG,CACjCsB,MAAM,CAACrB,GAAG,CAAC,MAAMrB,QAAQ,CAACwB,GAAG,CAAC,YAAY,CAAC,CAC7C,CAAC;IACD,MAAMoB,eAAe,GAAGD,SAAS,CAACtB,GAAG,CAClCkB,QAAQ,IAAKA,QAAQ,CAACd,IAAI,CAACC,KAAK,CAAC,CAAC,CACrC,CAAC;IACDV,QAAQ,CAAC6B,SAAS,CAACD,eAAe,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOd,KAAK,EAAE;IACdf,eAAe,CAAC,8BAA8B,EAAEe,KAAK,CAAC;EACxD;AACF,CACF,CAAC;AACD;AACA,OAAO,MAAMgB,eAAe,GAAG/C,gBAAgB,CAC7C,yBAAyB,EACzB,OAAOe,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC1C,MAAMuB,QAAQ,GAAG,MAAMvC,QAAQ,CAACwB,GAAG,CAAC,iBAAiB,CAAC;EACtDR,QAAQ,CAAC+B,UAAU,CAACR,QAAQ,CAACd,IAAI,CAACC,KAAK,CAAC,CAAC;AAC3C,CACF,CAAC;AACD;AACA,OAAO,MAAMsB,kBAAkB,GAAGjD,gBAAgB,CAChD,gCAAgC,EAChC,OAAOkC,IAAI,EAAE;EAAElB,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMuB,QAAQ,GAAG,MAAMvC,QAAQ,CAACwB,GAAG,CAAE,gBAAeS,IAAK,EAAC,CAAC;EAC3DjB,QAAQ,CAACiC,cAAc,CAACV,QAAQ,CAACd,IAAI,CAACC,KAAK,CAAC,CAAC;AAC/C,CACF,CAAC;AACD;AACA,OAAO,MAAMwB,eAAe,GAAGnD,gBAAgB,CAC7C,6BAA6B,EAC7B,OAAOkC,IAAI,EAAE;EAAElB,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMmC,GAAG,GAAG,MAAMnD,QAAQ,CAACwB,GAAG,CAAE,gBAAeS,IAAK,EAAC,CAAC;EACtDjB,QAAQ,CAACoC,cAAc,CAACD,GAAG,CAAC1B,IAAI,CAACC,KAAK,CAAC,CAAC;AAC1C,CACF,CAAC;AACD;AACA,OAAO,MAAM2B,cAAc,GAAGtD,gBAAgB,CAC5C,uBAAuB,EACvB,OAAOkC,IAAI,EAAE;EAAElB,eAAe;EAAEC;AAAS,CAAC,KAAK;EAC7C,MAAMmC,GAAG,GAAG,MAAMnD,QAAQ,CAACwB,GAAG,CAAE,gBAAeS,IAAK,EAAC,CAAC;EACtDjB,QAAQ,CAACsC,aAAa,CAACH,GAAG,CAAC1B,IAAI,CAACC,KAAK,CAAC,CAAC;AACzC,CACF,CAAC;AAED,MAAM6B,SAAS,GAAGzD,WAAW,CAAC;EAC5B0D,IAAI,EAAE,UAAU;EAChBvD,YAAY;EACZwD,QAAQ,EAAE;IACR5B,UAAU,EAAEA,CAAC6B,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACxD,MAAM,GAAGyD,MAAM,CAACC,OAAO;IAC/B,CAAC;IACD1B,kBAAkB,EAAEA,CAACwB,KAAK,EAAEC,MAAM,KAAK;MACrCD,KAAK,CAACvD,QAAQ,GAAGwD,MAAM,CAACC,OAAO;IACjC,CAAC;IACDxB,WAAW,EAAEA,CAACsB,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACtD,OAAO,GAAGuD,MAAM,CAACC,OAAO;IAChC,CAAC;IACDpB,eAAe,EAAEA,CAACkB,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACrD,WAAW,GAAGsD,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,aAAa,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACpD,IAAI,GAAGqD,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDf,SAAS,EAAEA,CAACa,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACnD,UAAU,GAAGoD,MAAM,CAACC,OAAO;IACnC,CAAC;IACDvB,oBAAoB,EAAEA,CAACqB,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAAClD,gBAAgB,GAAGmD,MAAM,CAACC,OAAO;IACzC,CAAC;IACDb,UAAU,EAAEA,CAACW,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACjD,OAAO,GAAGkD,MAAM,CAACC,OAAO;IAChC,CAAC;IACDX,cAAc,EAAEA,CAACS,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAAChD,WAAW,GAAGiD,MAAM,CAACC,OAAO;IACpC,CAAC;IACDR,cAAc,EAAEA,CAACM,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAAC/C,WAAW,GAAGgD,MAAM,CAACC,OAAO;IACpC,CAAC;IACDN,aAAa,EAAEA,CAACI,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAAC9C,MAAM,GAAG+C,MAAM,CAACC,OAAO;IAC/B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACX/B,UAAU;EACVK,kBAAkB;EAClBE,WAAW;EACXI,eAAe;EACfqB,aAAa;EACbhB,SAAS;EACTR,oBAAoB;EACpBU,UAAU;EACVE,cAAc;EACdG,cAAc;EACdE;AACF,CAAC,GAAGC,SAAS,CAACO,OAAO;AAErB,eAAeP,SAAS,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}