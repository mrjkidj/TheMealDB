{"ast":null,"code":"var _jsxFileName = \"/Users/saabolotkajratbekuulu/Desktop/React/themeal/src/Components/Alfavit-info/Alfavit-info.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport s from \"./Alfavit-info.module.css\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { getAlfavitMeals } from \"../../Redux-toolkit/MealSlice/MealSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport List from \"../List\";\nimport Alfavit from \"../Alfavit/Alfavit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlfavitInfo = () => {\n  _s();\n  const {\n    meals\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAlfavitMeals(meals));\n  }, [meals]);\n  const {\n    alfavitMeal\n  } = useSelector(state => state.products);\n  const infoClick = (id, title) => {\n    navigate(`/meal/${id}/${title}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.content,\n      children: alfavitMeal ? /*#__PURE__*/_jsxDEV(List, {\n        items: alfavitMeal,\n        renderItem: (elem, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => infoClick(elem.idMeal, elem.strMea),\n          className: s.meal_content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.images,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: elem.strMealThumb,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: elem.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: s.text,\n        children: \"No meals found \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: s.text,\n        children: \"Browse Meals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alfavit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AlfavitInfo, \"J8C3uXAziKZRjfCCfZ8aeLDXZgo=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n_c = AlfavitInfo;\nexport default AlfavitInfo;\nvar _c;\n$RefreshReg$(_c, \"AlfavitInfo\");","map":{"version":3,"names":["React","useEffect","s","useParams","useNavigate","getAlfavitMeals","useDispatch","useSelector","List","Alfavit","jsxDEV","_jsxDEV","AlfavitInfo","_s","meals","navigate","dispatch","alfavitMeal","state","products","infoClick","id","title","className","children","content","items","renderItem","elem","i","onClick","idMeal","strMea","meal_content","images","src","strMealThumb","alt","fileName","_jsxFileName","lineNumber","columnNumber","strMeal","text","_c","$RefreshReg$"],"sources":["/Users/saabolotkajratbekuulu/Desktop/React/themeal/src/Components/Alfavit-info/Alfavit-info.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport s from \"./Alfavit-info.module.css\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { getAlfavitMeals } from \"../../Redux-toolkit/MealSlice/MealSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport List from \"../List\";\nimport Alfavit from \"../Alfavit/Alfavit\";\n\nconst AlfavitInfo = () => {\n  const { meals } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAlfavitMeals(meals));\n  }, [meals]);\n  const { alfavitMeal } = useSelector((state) => state.products);\n  const infoClick = (id, title) => {\n    navigate(`/meal/${id}/${title}`);\n  };\n  return (\n    <div className=\"container\">\n      <div className={s.content}>\n        {alfavitMeal ? (\n          <List\n            items={alfavitMeal}\n            renderItem={(elem, i) => (\n              <div\n                onClick={() => infoClick(elem.idMeal, elem.strMea)}\n                className={s.meal_content}\n              >\n                <div className={s.images}>\n                  <img src={elem.strMealThumb} alt=\"\" />\n                </div>\n                <p>{elem.strMeal}</p>\n              </div>\n            )}\n          />\n        ) : (\n          <h2 className={s.text}>No meals found </h2>\n        )}\n      </div>\n      <div>\n        <h2 className={s.text}>Browse Meals</h2>\n        <br />\n        <Alfavit />\n      </div>\n    </div>\n  );\n};\n\nexport default AlfavitInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}